# RedStone Example Configuration File.

# Server block.
server "Freenode" {
    # Server address/IP.
    host "chat.freenode.net";
    # Server port.
    port 6667;
    # Bot nickname.
    nick "SomeBot";
    # Bot ident.
    ident "SomeBot";
    # Bot realname.
    realname "SomeBot";
    # IPv4 or IPv6 bind host (e.g 1.2.3.4 or 2a03:beef::d0:d0:face:cafe)
    bind '0.0.0.0';
    # Server password. This is hardly ever used.
    pass "foobar123";
    # Modes on connect.
    modes "+iwxB";
    # Single-line channel auto-join.
    ajoin "#freenode,#somebot";
    # Auto rejoin on kick.
    autorejoin 0;
    # Use IPv6?
    ipv6 0;
    # Use SSL?
    ssl 0;
    # Identify to NickServ or service with password
    idstr "NS IDENTIFY foobar456";
    # SASL Username for Authenticating (SASL Module Required)
    sasl_username "SomeBot";
    # SASL Password for Authenticating (SASL Module Required)
    sasl_password "foobar789";
    # SASL Timeout value in seconds (SASL Module Required)
    sasl_timeout 20;
}

# Server block.
server "AtomicEdge" {
    host "irc.atomicedge.org";
    port 6667;
    nick "SomeBot";
    ident "SomeBot";
    realname "SomeBot";
    bind '0.0.0.0';
    modes "+iwxB";
    ajoin "#somebot,#somechannel";
    ajoin "#someotherchannel";
    autorejoin 1;
    ipv6 0;
    ssl 0;
    idstr "NS IDENTIFY foobar123";
}

# Privileges.
privset "op" {
    # Privileges to use RESTART and SHUTDOWN.
    priv "cmd.restart";
    priv "cmd.shutdown";
}
privset "admin" {
    # Inherit privileges from op.
    inherit "op";
    # Privilege to use MODLOAD, MODRELOAD and MODUNLOAD.
    priv "cfunc.modules";
}
privset "owner" {
    # All privileges.
    priv "ALL";
}

# User access.
user "MyOwner" {
    # Hostmask based privileges.
    mask "MyOwner!*@1.2.3.4";
    privs "owner";
}
user "#somebot-private" {
    # Channel status based privileges. net is necessary in this case.
    net "Freenode";
    chanstatus "o:#somebot-private";
    privs "op";
}

# Command aliases.
# These can be used to alias a shortcut to a longer command.
# Like so: alias "PL UNO PLAY";
aliases {
    alias "RELOAD REHASH";
}

# Database.
database {
    # Format. This can be one of the following:
    #     sqlite    Requires database:filename. Recommended.
    #     mysql     Requires database:name,host,username,password and that Auto be built with --with-mysql. Optional: database:port
    #     pgsql     Requires database:name,host,username,password and that Auto be built with --with-pgsql. Optional: database:port
    format "sqlite";
    
    # If you chose SQLite, uncomment this and choose a filename.
    # filename "somebot.db";
    
    # If you chose MySQL or PostgreSQL, uncomment these and set them.
    # name "redstone";
    # host "localhost";
    # username "root";
    # password "moocows";
}

# Loop.
#   For optimization, choose the best available for your system.
#   Valid options:
#      * poll (Included with IO::Async base)
#      * select (Included with IO::Async base)
#      * epoll (requires IO::Async::Loop::Epoll)
#      * ppoll (requires IO::Async::Loop::Ppoll)
#      * kqueue (requires IO::Async::Loop::Kqueue)
loop "select";

# Locale.
locale "en_US";

# Logging to IRC. Uncomment this and set it to setup an IRC logchan.
# logchan "Freenode/#somebot-private";

# Expire logs in days. 0 disables.
expire_logs 15;

# Check-in with master server.
# *** Currently Offline ***
contact_home 0;

# Fantasy prefix.
fantasy_pf "!";

# Rate limiting.
ratelimit 1;
# How often to reset command use count in seconds.
ratelimit_time 6;
# How many commands can be used by a user in each period.
ratelimit_amount 3;

# Type of ban.
# 1 - *!*@h
# 2 - n!*@*
# 3 - *!u@h
# 4 - n!*u@h
# 5 - *!*@*.h+
bantype 1;

# Module autoload.
module "OnJoin";

# Lets see if you read the config.
# Change this to 0 or remove it.
die 1;
